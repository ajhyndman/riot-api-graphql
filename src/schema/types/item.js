import {
  GraphQLBoolean,
  GraphQLFloat,
  GraphQLInt,
  GraphQLList,
  GraphQLObjectType,
  GraphQLString,
} from 'graphql';

import ImageType from './image';


const GoldType = new GraphQLObjectType({
  name: 'Gold',
  description: 'This object contains item gold data',
  fields: () => ({
    base: { type: GraphQLInt },
    purchasable: { type: GraphQLBoolean },
    sell: { type: GraphQLInt },
    total: { type: GraphQLInt },
  })
});

const MetaDataType = new GraphQLObjectType({
  name: 'MetaData',
  description: 'This object contains image data',
  fields: () => ({
    isRune: { type: GraphQLBoolean },
    tier: { type: GraphQLString },
    type: { type: GraphQLString },
  }),
});

const BasicDataStatsType = new GraphQLObjectType({
  name: 'BasicDataStats',
  description: 'This object contains basic data stats',
  fields: () => ({
    FlatArmorMod: { type: GraphQLFloat },
    FlatAttackSpeedMod: { type: GraphQLFloat },
    FlatBlockMod: { type: GraphQLFloat },
    FlatCritChanceMod: { type: GraphQLFloat },
    FlatCritDamageMod: { type: GraphQLFloat },
    FlatEXPBonus: { type: GraphQLFloat },
    FlatEnergyPoolMod: { type: GraphQLFloat },
    FlatEnergyRegenMod: { type: GraphQLFloat },
    FlatHPPoolMod: { type: GraphQLFloat },
    FlatHPRegenMod: { type: GraphQLFloat },
    FlatMPPoolMod: { type: GraphQLFloat },
    FlatMPRegenMod: { type: GraphQLFloat },
    FlatMagicDamageMod: { type: GraphQLFloat },
    FlatMovementSpeedMod: { type: GraphQLFloat },
    FlatPhysicalDamageMod: { type: GraphQLFloat },
    FlatSpellBlockMod: { type: GraphQLFloat },
    PercentArmorMod: { type: GraphQLFloat },
    PercentAttackSpeedMod: { type: GraphQLFloat },
    PercentBlockMod: { type: GraphQLFloat },
    PercentCritChanceMod: { type: GraphQLFloat },
    PercentCritDamageMod: { type: GraphQLFloat },
    PercentDodgeMod: { type: GraphQLFloat },
    PercentEXPBonus: { type: GraphQLFloat },
    PercentHPPoolMod: { type: GraphQLFloat },
    PercentHPRegenMod: { type: GraphQLFloat },
    PercentLifeStealMod: { type: GraphQLFloat },
    PercentMPPoolMod: { type: GraphQLFloat },
    PercentMPRegenMod: { type: GraphQLFloat },
    PercentMagicDamageMod: { type: GraphQLFloat },
    PercentMovementSpeedMod: { type: GraphQLFloat },
    PercentPhysicalDamageMod: { type: GraphQLFloat },
    PercentSpellBlockMod: { type: GraphQLFloat },
    PercentSpellVampMod: { type: GraphQLFloat },
    rFlatArmorModPerLevel: { type: GraphQLFloat },
    rFlatArmorPenetrationMod: { type: GraphQLFloat },
    rFlatArmorPenetrationModPerLevel: { type: GraphQLFloat },
    rFlatCritChanceModPerLevel: { type: GraphQLFloat },
    rFlatCritDamageModPerLevel: { type: GraphQLFloat },
    rFlatDodgeMod: { type: GraphQLFloat },
    rFlatDodgeModPerLevel: { type: GraphQLFloat },
    rFlatEnergyModPerLevel: { type: GraphQLFloat },
    rFlatEnergyRegenModPerLevel: { type: GraphQLFloat },
    rFlatGoldPer10Mod: { type: GraphQLFloat },
    rFlatHPModPerLevel: { type: GraphQLFloat },
    rFlatHPRegenModPerLevel: { type: GraphQLFloat },
    rFlatMPModPerLevel: { type: GraphQLFloat },
    rFlatMPRegenModPerLevel: { type: GraphQLFloat },
    rFlatMagicDamageModPerLevel: { type: GraphQLFloat },
    rFlatMagicPenetrationMod: { type: GraphQLFloat },
    rFlatMagicPenetrationModPerLevel: { type: GraphQLFloat },
    rFlatMovementSpeedModPerLevel: { type: GraphQLFloat },
    rFlatPhysicalDamageModPerLevel: { type: GraphQLFloat },
    rFlatSpellBlockModPerLevel: { type: GraphQLFloat },
    rFlatTimeDeadMod: { type: GraphQLFloat },
    rFlatTimeDeadModPerLevel: { type: GraphQLFloat },
    rPercentArmorPenetrationMod: { type: GraphQLFloat },
    rPercentArmorPenetrationModPerLevel: { type: GraphQLFloat },
    rPercentAttackSpeedModPerLevel: { type: GraphQLFloat },
    rPercentCooldownMod: { type: GraphQLFloat },
    rPercentCooldownModPerLevel: { type: GraphQLFloat },
    rPercentMagicPenetrationMod: { type: GraphQLFloat },
    rPercentMagicPenetrationModPerLevel: { type: GraphQLFloat },
    rPercentMovementSpeedModPerLevel: { type: GraphQLFloat },
    rPercentTimeDeadMod: { type: GraphQLFloat },
    rPercentTimeDeadModPerLevel: { type: GraphQLFloat },
  }),
});

export default new GraphQLObjectType({
  name: 'Item',
  description: 'This object contains item data.',
  fields: () => ({
    colloq: { type: GraphQLString },
    consumeOnFull: { type: GraphQLBoolean },
    consumed: { type: GraphQLBoolean },
    depth: { type: GraphQLInt },
    description: { type: GraphQLString },
    // effect: { type: Map[string, string], },
    from: { type: new GraphQLList(GraphQLString) },
    gold: { type: GoldType, description: 'Data Dragon includes the gold field for basic data, which is shared by both rune and item. However, only items have a gold field on them, representing their gold cost in the store. Since runes are not sold in the store, they have no gold cost.' },
    group: { type: GraphQLString },
    hideFromAll: { type: GraphQLBoolean },
    id: { type: GraphQLInt },
    image: { type: ImageType },
    inStore: { type: GraphQLBoolean },
    into: { type: new GraphQLList(GraphQLString) },
    // maps: { type: Map[string, boolean], },
    name: { type: GraphQLString },
    plaintext: { type: GraphQLString },
    requiredChampion: { type: GraphQLString },
    rune: { type: MetaDataType, },
    sanitizedDescription: { type: GraphQLString },
    specialRecipe: { type: GraphQLInt },
    stacks: { type: GraphQLInt },
    stats: { type: BasicDataStatsType, },
    tags: { type: new GraphQLList(GraphQLString) },
  })
});
